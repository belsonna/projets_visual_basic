<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btrestaure.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>